-- MySQL Script generated by MySQL Workbench
-- Sun Oct 15 20:56:17 2017
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `mydb` DEFAULT CHARACTER SET utf8 ;
USE `mydb` ;

-- -----------------------------------------------------
-- Table `mydb`.`T_USER`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`T_USER` (
  `USER_ID` INT NOT NULL AUTO_INCREMENT,
  `FIRST_NAME` VARCHAR(255) NOT NULL,
  `LAST_NAME` VARCHAR(255) NOT NULL,
  `EMAIL` VARCHAR(255) NOT NULL,
  `PASSWORD` VARCHAR(32) NOT NULL,
  `CREATE_DATE` TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`USER_ID`));


-- -----------------------------------------------------
-- Table `mydb`.`T_USER_PROFILE`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`T_USER_PROFILE` (
  `FK_USER_ID` INT NOT NULL,
  `PICTURE_PROFILE_DATA` BLOB NULL,
  `PICTURE_PROFILE_LENGTH` DOUBLE NULL,
  `PICTURE_PROFILE_TYPE` VARCHAR(255) NULL,
  PRIMARY KEY (`FK_USER_ID`),
  CONSTRAINT `fk_T_USER_PROFILE_T_USER`
    FOREIGN KEY (`FK_USER_ID`)
    REFERENCES `mydb`.`T_USER` (`USER_ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`T_TOPIC`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`T_TOPIC` (
  `TOPIC_ID` INT NOT NULL AUTO_INCREMENT,
  `TITLE` VARCHAR(45) NULL,
  `SUMMARY` VARCHAR(45) NULL,
  `IS_FUN` TINYINT NULL,
  PRIMARY KEY (`TOPIC_ID`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`T_COMMENT`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`T_COMMENT` (
  `COMMENT_ID` INT NOT NULL AUTO_INCREMENT,
  `CONTENT` VARCHAR(255) NULL,
  `FK_USER_ID` INT NOT NULL,
  `T_TOPIC_TOPIC_ID` INT NOT NULL,
  PRIMARY KEY (`COMMENT_ID`, `FK_USER_ID`, `T_TOPIC_TOPIC_ID`),
  INDEX `fk_T_COMMENTS_T_USER1_idx` (`FK_USER_ID` ASC),
  INDEX `fk_T_COMMENT_T_TOPIC1_idx` (`T_TOPIC_TOPIC_ID` ASC),
  CONSTRAINT `fk_T_COMMENTS_T_USER1`
    FOREIGN KEY (`FK_USER_ID`)
    REFERENCES `mydb`.`T_USER` (`USER_ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_T_COMMENT_T_TOPIC1`
    FOREIGN KEY (`T_TOPIC_TOPIC_ID`)
    REFERENCES `mydb`.`T_TOPIC` (`TOPIC_ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`T_RESPONSE`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`T_RESPONSE` (
  `RESPONSE_ID` INT NOT NULL AUTO_INCREMENT,
  `CONTENT` VARCHAR(255) NULL,
  `FK_COMMENT_ID` INT NOT NULL,
  `FK_USER_ID` INT NOT NULL,
  PRIMARY KEY (`RESPONSE_ID`, `FK_COMMENT_ID`, `FK_USER_ID`),
  INDEX `fk_T_RESPONSES_T_COMMENTS1_idx` (`FK_COMMENT_ID` ASC),
  INDEX `fk_T_RESPONSES_T_USER1_idx` (`FK_USER_ID` ASC),
  CONSTRAINT `fk_T_RESPONSES_T_COMMENTS1`
    FOREIGN KEY (`FK_COMMENT_ID`)
    REFERENCES `mydb`.`T_COMMENT` (`COMMENT_ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_T_RESPONSES_T_USER1`
    FOREIGN KEY (`FK_USER_ID`)
    REFERENCES `mydb`.`T_USER` (`USER_ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`T_TOPIC_CONTENT`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`T_TOPIC_CONTENT` (
  `TOPIC_CONTENT_ID` INT NOT NULL AUTO_INCREMENT,
  `DATA` BLOB NULL,
  `LENGTH` DOUBLE NULL,
  `TYPE` VARCHAR(255) NULL,
  `FK_TOPIC_ID` INT NOT NULL,
  `IS_TEXT` TINYINT NULL,
  PRIMARY KEY (`TOPIC_CONTENT_ID`, `FK_TOPIC_ID`),
  INDEX `fk_T_TOPIC_CONTENT_T_TOPIC1_idx` (`FK_TOPIC_ID` ASC),
  CONSTRAINT `fk_T_TOPIC_CONTENT_T_TOPIC1`
    FOREIGN KEY (`FK_TOPIC_ID`)
    REFERENCES `mydb`.`T_TOPIC` (`TOPIC_ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`T_RATING_TOPIC`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`T_RATING_TOPIC` (
  `T_USER_USER_ID` INT NOT NULL,
  `T_TOPIC_TOPIC_ID` INT NOT NULL,
  `RATING` INT NULL COMMENT 'Authorized values (-1, 0, 1)',
  PRIMARY KEY (`T_USER_USER_ID`, `T_TOPIC_TOPIC_ID`),
  INDEX `fk_T_RATING_TOPIC_T_TOPIC1_idx` (`T_TOPIC_TOPIC_ID` ASC),
  CONSTRAINT `fk_T_RATING_TOPIC_T_USER1`
    FOREIGN KEY (`T_USER_USER_ID`)
    REFERENCES `mydb`.`T_USER` (`USER_ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_T_RATING_TOPIC_T_TOPIC1`
    FOREIGN KEY (`T_TOPIC_TOPIC_ID`)
    REFERENCES `mydb`.`T_TOPIC` (`TOPIC_ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`T_RATING_COMMENT`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`T_RATING_COMMENT` (
  `FK_USER_ID` INT NOT NULL,
  `FK_COMMENT_ID` INT NOT NULL,
  `RATING` INT NULL COMMENT 'Authorized value (-1,0,1)',
  PRIMARY KEY (`FK_USER_ID`, `FK_COMMENT_ID`),
  INDEX `fk_T_RATING_COMMENT_T_COMMENT1_idx` (`FK_COMMENT_ID` ASC),
  CONSTRAINT `fk_T_RATING_COMMENT_T_USER1`
    FOREIGN KEY (`FK_USER_ID`)
    REFERENCES `mydb`.`T_USER` (`USER_ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_T_RATING_COMMENT_T_COMMENT1`
    FOREIGN KEY (`FK_COMMENT_ID`)
    REFERENCES `mydb`.`T_COMMENT` (`COMMENT_ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
